#cloud-config
ssh_pwauth: yes
password: Observability2022!
chpasswd:
  expire: false

package_update: true

packages:
  - unzip
  - git
  - shellinabox
  - lynx
  - w3m
  - gnupg2
  - docker-compose
  - python3.9-venv
  - jq

groups:
  - docker

system_info:
  default_user:
    groups: [docker]

write_files:
  - path: /etc/skel/.profile
    append: true
    content: |
      echo "Waiting for cloud-init status..."
      if ! /usr/bin/timeout 180 grep -q 'Cloud-init .*finished at' <(sudo tail -f /var/log/cloud-init-output.log); then
        echo "Instance setup did not complete after 3 minutes. Please try again.";
      else
        echo "Your instance is ready!";
      fi

      if [ -e /etc/.instance ]; then
        INSTANCE=$(cat /etc/.instance)
        CLUSTER_NAME="$INSTANCE-cluster"
      fi
      export INSTANCE CLUSTER_NAME

      # Set prompt
      export PS1='\u@\h:\w$ '
      export KUBECONFIG=/home/ubuntu/.kube/config
      alias kc='kubectl'
      alias dc='docker-compose'
      alias d='docker'
      alias gs='git status'
      alias gb='git branch'
      alias gco='git checkout'
      alias ..='cd ..'
      alias msget='git reset --hard && git clean -fdx && git checkout'
      msdiff() {
        milestone=$1
        diff -ru $(git rev-parse --show-toplevel) ~/tmp/milestones/"$milestone"
      }
  - path: /etc/rancher/k3s/registries.yaml
    permissions: '0600'
    owner: root:root
    content: |
      mirrors:
        docker.registry:
          endpoint:
            - "http://docker.registry:9999"
  - path: /etc/docker/daemon.json
    content: |
      {
        "insecure-registries" : ["docker.registry:9999"]
      }
  - path: /usr/local/bin/setup-docker-registry.sh
    permissions: '0744'
    content: |
      #!/usr/bin/env bash
      REGISTRY_NAME=docker.registry
      REGISTRY_PORT=9999
      NODE_IP=$(ip -o -4 addr | awk '$2 != "lo" { print $4}' | sed -e 's,/[[:digit:]]\+$,,')
      echo "$NODE_IP $REGISTRY_NAME" | tee -a /etc/hosts
      echo "$NODE_IP $REGISTRY_NAME" | tee -a /etc/cloud/templates/hosts.debian.tmpl
      systemctl restart docker
  - path: /usr/local/bin/local-setup.sh
    permissions: "0744"
    content: |
      if [ -e /etc/.instance ]; then
        INSTANCE=$(cat /etc/.instance)
      fi
      if [ -z ${INSTANCE+x} ]; then
        INSTANCE=$(cat /dev/urandom | base64 | tr -dc 'a-z' | head -c4)
        sed -i "s/127.0.0.1.*/127.0.0.1 $INSTANCE.local $INSTANCE localhost/" /etc/hosts
        sed -i "s/127.0.0.1.*/127.0.0.1 $INSTANCE.local $INSTANCE localhost/" /etc/cloud/templates/hosts.debian.tmpl
        sudo hostnamectl set-hostname $INSTANCE
        echo $INSTANCE > /etc/.instance
      fi
      export INSTANCE

      # Checkout all branches
      export GIT_DIR=/home/ubuntu/o11y-bootcamp/.git
      export GIT_WORK_DIR=/home/ubuntu/o11y-bootcamp
      git branch -a --format '%(refname:lstrip=-1)' | grep -Evi 'main|head|gh-pages' | xargs -n1 git checkout
      # Switch to main
      git checkout main
      # setup milestones for diff
      for branch in $(git branch --all | grep '^\s*remotes' | grep -v -E '(:?HEAD|master|main|gh-pages)$'); do
          br="${branch##*/}"
          mkdir -p /home/ubuntu/milestones/"$br"
          git archive --format tar "$br"| tar xf - -C /home/ubuntu/milestones/"$br"/
      done
      unset GIT_DIR
      unset GIT_WORK_DIR

runcmd:
  # Install Helm
  - curl -s https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  # Install K9s (Kubernetes UI)
  - curl -S -OL https://github.com/derailed/k9s/releases/download/v0.25.4/k9s_Linux_x86_64.tar.gz
  - tar xfz k9s_Linux_x86_64.tar.gz -C /usr/local/bin/ k9s
  # Download Bootcamp
  - git clone https://github.com/a-staebler/o11y-bootcamp /home/ubuntu/o11y-bootcamp
  # Configure motd
  - curl -s https://raw.githubusercontent.com/signalfx/observability-workshop/master/cloud-init/motd -o /etc/motd
  - chmod -x /etc/update-motd.d/*
  # Install Terraform
  - curl -S -OL https://releases.hashicorp.com/terraform/1.0.11/terraform_1.0.11_linux_amd64.zip
  - unzip -qq terraform_1.0.11_linux_amd64.zip -d /usr/local/bin
  # Configure shellinabox port and disable ssl then restart
  - sed -i 's/SHELLINABOX_PORT=4200/SHELLINABOX_PORT=6501/'  /etc/default/shellinabox
  - sed -i "s/\"--no-beep\"/\"--no-beep --disable-ssl\"/" /etc/default/shellinabox
  - service shellinabox restart
  - bash /usr/local/bin/setup-docker-registry.sh
  - bash /usr/local/bin/local-setup.sh
  # Install K3s
  - curl -sfL https://get.k3s.io | sh -
  # Create kube config
  - mkdir /home/ubuntu/.kube && kubectl config view --raw > /home/ubuntu/.kube/config
  - chmod 400 /home/ubuntu/.kube/config
  # Grab some text files
  - git clone https://github.com/teropa/nlp /home/ubuntu/nlp
  # Set correct permissions on ubuntu user home directory
  - chown -R ubuntu:ubuntu /home/ubuntu
  # Deploy private registry
  - /usr/local/bin/kubectl apply -f /home/ubuntu/o11y-bootcamp/k3s/registry/registry.yaml
